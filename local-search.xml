<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>VsCode搭建C语言运行环境和终端乱码解决</title>
    <link href="/2024/10/10/b/"/>
    <url>/2024/10/10/b/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs">       C语言学习进程：3%    未来程序猿的痛苦成长厉程</code></pre><h2 id="解决vscode运行C语言和输出中文乱码问题"><a href="#解决vscode运行C语言和输出中文乱码问题" class="headerlink" title="解决vscode运行C语言和输出中文乱码问题"></a>解决vscode运行C语言和输出中文乱码问题</h2><h3 id="1-运行C语言"><a href="#1-运行C语言" class="headerlink" title="1.运行C语言"></a>1.运行C语言</h3><p>点击vs中左侧 扩展–依次搜索：<br>C&#x2F;C++<br>Code Runner<br>如下图<br><img src="/img/QQ20241010-173544.png" srcset="/img/loading.gif" lazyload><br><img src="/img/QQ20241010-173620.png" srcset="/img/loading.gif" lazyload></p><p>之后要在windows中安装gcc编译器，点击 <a href="https://github.com/niXman/mingw-builds-binaries/releases">Github</a> 解压安装包</p><p><img src="/img/QQ20241010-182519.png" srcset="/img/loading.gif" lazyload><br>我选了 x86_64-14.2.0-release-posix-seh-msvcrt-rt_v12-rev0.7z</p><p>然后打开电脑高级系统设置，找到环境变量<br>选中用户变量path，点击编辑<br><img src="/img/QQ20241010-183237.png" srcset="/img/loading.gif" lazyload></p><p>点击新建，找到mingw目录中bin文件，复制路径<br><img src="/img/QQ20241010-184436.png" srcset="/img/loading.gif" lazyload></p><p>windows+R输入cmd,输入 gcc -v</p><p><img src="/img/QQ20241010-185111.png" srcset="/img/loading.gif" lazyload><br>表明安装成功</p><h3 id="2-输出中文乱码"><a href="#2-输出中文乱码" class="headerlink" title="2.输出中文乱码"></a>2.输出中文乱码</h3><p>找到首选项进入设置，可以看到右上角有个文件的图标点击进去。<br><img src="/img/0714acfb554d4a2585dc804ca82f409e.png" srcset="/img/loading.gif" lazyload></p><p>将以下的代码追加到大括号中就可以了，追加的时候记得在上一段代码最后加上一个逗号<br><img src="/img/QQ20241010-185507.png" srcset="/img/loading.gif" lazyload><br><img src="/img/QQ20241010-185817.png" srcset="/img/loading.gif" lazyload></p><p>记得保存，然后重新运行代码就不会出现乱码了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>待到秋来九月八，我花开后百花杀</title>
    <link href="/2024/10/08/a/"/>
    <url>/2024/10/08/a/</url>
    
    <content type="html"><![CDATA[<p>C语言学习进行时，刻不容缓！<br>今天是在海大晚自习的第一天……</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &quot;stdio.h&quot;</span><br><span class="hljs-comment">#include &quot;string.h&quot;</span><br><span class="hljs-comment">#include &quot;stdlib.h&quot;</span><br><br>const int reglen = 94;       //每区(行)有 94 位(列)<br>const int font_width  = 16;  // 单字点阵宽度(列数)<br>const int font_height = 16;  // 单字点阵高度(行数)<br>const int dotsize = 16 * 16/8;   //一个汉字点阵所占的字节数<br>const int subcode = 0xa0;      //内码与区、位码的差值<br><br>char *font_file_name = <span class="hljs-string">&quot;chs16.fon&quot;</span>; // 点阵字库文件名<br>char str[] = <span class="hljs-string">&quot;计&quot;</span>;    //要显示点阵信息的汉字<br>char bindot[16 * 16/8] = &#123;0&#125;;   //存储点阵信息的数组<br><br>void printcharbindot(char* bindot, int dotlen);<br>int main(int argc, char* argv[])<br>&#123;<br>    FILE *fp = fopen(font_file_name, <span class="hljs-string">&quot;rb&quot;</span>);<br>    int string_size = font_width * font_height;<br><br><br>    int i=0,j=0;<br>   int offset=0;<br>unsigned char regcode;  //区码<br>    unsigned char bitcode;  //位码 <br><br>    // 计算区位码，<br>    regcode = (unsigned char)str[i]-subcode;<br>    bitcode = (unsigned char)str[i+1]-subcode;<br>// <br>//    再计算汉字在字库中的位置，进而得出此字符点阵在字体文件中的偏移<br><br>offset=((regcode-<span class="hljs-number">1</span>)*reglen+bitcode-<span class="hljs-number">1</span>)*dotsize;<br>    <br>    // 在字库文件中读取其点阵数据<br>    fseek(fp, offset, SEEK_SET);<br>    fread(bindot, sizeof(bindot),<span class="hljs-number">1</span>, fp);<br>    <br>    //输出其点阵信息<br>    printcharbindot(bindot, dotsize);<br>    <br>    fclose(fp);<br>    system(&quot;pause&quot;);<br>    return <span class="hljs-number">0</span>;<br>&#125;<br><br>//按顺序输出点阵的每一位信息<br>void printcharbindot(char* bindot, int len)<br>&#123;<br>    int charnum = <span class="hljs-number">0</span>;  //当前字节号<br>    int bitnum  = <span class="hljs-number">0</span>;  //已读取的位数<br>    int bitindex =<span class="hljs-number">0</span>;  //当前位号<br>    int bitvalue;     //当前位的值<br>    for (charnum =<span class="hljs-number">0</span>; charnum &lt; len; ++charnum)<br>    &#123;<br>        //从高到低顺次输出一个字节的每位信息<br>        for(bitindex = <span class="hljs-number">7</span>;bitindex&gt;=<span class="hljs-number">0</span>; --bitindex)<br>        &#123;<br>            //输出当前字节第bitindex位的值<br>            bitvalue  = ((bindot[charnum]&gt;&gt;bitindex) &amp; <span class="hljs-number">0</span>x1 );  <br>            printf(&quot;%c&quot;, bitvalue+&#x27;<span class="hljs-number">0</span>&#x27;);<br><br>            //满<span class="hljs-number">12</span>位输出一行<br>            if ((++bitnum %<span class="hljs-number">16</span>) == <span class="hljs-number">0</span>)<br>                printf(&quot;\n&quot;);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/10/07/hello-world/"/>
    <url>/2024/10/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
